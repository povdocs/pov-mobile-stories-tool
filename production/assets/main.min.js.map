{"version":3,"sources":["0.assetManager.js","1.app.js","9.main.js"],"names":["createCORSRequest","method","url","xhr","XMLHttpRequest","open","XDomainRequest","AssetManager","this","DEBUG","successCount","errorCount","cache","downloadQueue","inQueue","prototype","queueDownload","path","push","constructor","queue","downloadCallback","length","parentThis","i","obj","type","downloadImage","result","isDone","downloadAudio","downloadVideo","image","Image","console","log","addEventListener","src","audio","Audio","video","Error","responseType","window","URL","webkitURL","createObjectURL","response","event","progressCount","loaded","total","send","progress","key","hasOwnProperty","getAsset","updateProgress","oEvent","lengthComputable","percentComplete","assetManager","app","snapFile","touchX","touchY","canvas","assets","allAssets","snaps","appReady","init","readFile","start","setTimeout","eventListener","downloadAssets","$","on","l","snap","playObj","stopObj","nextSnap","hasClass","clientX","clientY","diffX","diffY","swipe","originalEvent","touches","document","keyCode","previousSnap","backToCover","snapContent","getJSON","createSnap","indexSnap","section","cover","content","append","addAssetManager","html","appendTo","index","indexOf","progressState","setInterval","css","width","clearInterval","asset","each","get","children","show","hide","x","y","Math","abs","getScroll","scroll","attr","parseInt","getCurrentSnap","id","getSnap","stop","animate","scrollLeft","data-scroll","data-snap","stopSnap","playSnap","addClass","scrollTop","removeClass","volume","pause","currentTime","prop","play","ready"],"mappings":"AAcA,QAAAA,mBAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAC,eAgBA,OAfA,mBAAAD,GAGAA,EAAAE,KAAAJ,EAAAC,GAAA,GAEA,mBAAAI,iBAGAH,EAAA,GAAAG,gBACAH,EAAAE,KAAAJ,EAAAC,IAIAC,EAAA,KAEAA,EASA,QAAAI,gBACAC,KAAAC,OAAA,EACAD,KAAAE,aAAA,EACAF,KAAAG,WAAA,EACAH,KAAAI,SACAJ,KAAAK,iBACAL,KAAAM,WAGAP,aAAAQ,UAAAC,cAAA,SAAAC,GACAT,KAAAK,cAAAK,KAAAD,IAGAV,aAAAQ,UAAAI,YAAA,SAAAC,EAAAC,GACA,mBAAAD,KAAAZ,KAAAK,cAAAO,GACA,IAAAZ,KAAAK,cAAAS,QAAA,mBAAAD,IAAAA,GAEA,KAAA,GADAE,GAAAf,KACAgB,EAAA,EAAAA,EAAAhB,KAAAK,cAAAS,OAAAE,IAAA,CACA,GAAAC,GAAAjB,KAAAK,cAAAW,EAIA,IAAA,SAAAC,EAAAC,KACAlB,KAAAmB,cAAAF,EAAAR,KAAA,SAAAA,EAAAW,GACAL,EAAAX,MAAAK,GAAAW,EACAL,EAAAM,UAAAR,UAGA,IAAA,SAAAI,EAAAC,KACAlB,KAAAsB,cAAAL,EAAAR,KAAA,SAAAA,EAAAW,GACAL,EAAAX,MAAAK,GAAAW,EACAL,EAAAM,UAAAR,UAGA,CAAA,GAAA,SAAAI,EAAAC,KAMA,QALAlB,MAAAuB,cAAAN,EAAAR,KAAA,SAAAA,EAAAW,GACAL,EAAAX,MAAAK,GAAAW,EACAL,EAAAM,UAAAR,SAOAd,aAAAQ,UAAAY,cAAA,SAAAV,EAAAI,GACA,GAAAW,GAAA,GAAAC,OACAV,EAAAf,IACAe,GAAAd,OAAAyB,QAAAC,IAAA,sBAAAlB,GAEAe,EAAAI,iBAAA,OAAA,WACAb,EAAAb,cAAA,EACAa,EAAAd,OAAAyB,QAAAC,IAAA,qBAAAlB,GACAI,EAAAJ,EAAAe,KACA,GACAA,EAAAI,iBAAA,QAAA,WACAb,EAAAZ,YAAA,IACA,GACAqB,EAAAK,IAAApB,GAGAV,aAAAQ,UAAAe,cAAA,SAAAb,EAAAI,GACA,GAAAiB,GAAA,GAAAC,OACAhB,EAAAf,IACAe,GAAAd,OAAAyB,QAAAC,IAAA,sBAAAlB,GAEAqB,EAAAF,iBAAA,OAAA,WACAb,EAAAd,OAAAyB,QAAAC,IAAA,qBAAAlB,GACAM,EAAAb,cAAA,EACAW,EAAAJ,EAAAqB,KACA,GACAA,EAAAF,iBAAA,QAAA,WACAb,EAAAZ,YAAA,IACA,GACA2B,EAAAD,IAAApB,GAGAV,aAAAQ,UAAAgB,cAAA,SAAAd,EAAAI,GACA,GAAAmB,GAAA,KACAjB,EAAAf,KACAL,EAAAH,kBAAA,MAAAiB,EACA,KAAAd,EAAA,KAAA,IAAAsC,OAAA,qBACAlB,GAAAd,OAAAyB,QAAAC,IAAA,sBAAAlB,GAEAd,EAAAuC,aAAA,OAEAvC,EAAAiC,iBAAA,OAAA,WACAb,EAAAd,OAAAyB,QAAAC,IAAA,qBAAAlB,GACAM,EAAAb,cAAA,EACAiC,OAAAC,IAAAD,OAAAC,KAAAD,OAAAE,UACAL,EAAAG,OAAAC,IAAAE,gBAAAtC,KAAAuC,UACA1B,EAAAJ,EAAAuB,KACA,GACArC,EAAAiC,iBAAA,QAAA,WACAb,EAAAZ,YAAA,IACA,GACAR,EAAAiC,iBAAA,WAAA,SAAAY,GACAzB,EAAA0B,cAAAhC,EAAA+B,EAAAE,OAAAF,EAAAG,SAEAhD,EAAAiD,QAGA7C,aAAAQ,UAAAc,OAAA,WACA,MAAArB,MAAAK,cAAAS,QAAAd,KAAAE,aAAAF,KAAAG,YAGAJ,aAAAQ,UAAAsC,SAAA,WACA,GAAAA,GAAA,EACAF,EAAA,CAEA,KAAA,GAAAG,KAAA9C,MAAAM,QACAN,KAAAM,QAAAyC,eAAAD,KACAD,GAAA7C,KAAAM,QAAAwC,GAAAD,SACAF,GAAA3C,KAAAM,QAAAwC,GAAAH,MAIA,OAAAE,GAAAF,EAAA,KAGA5C,aAAAQ,UAAAyC,SAAA,SAAAvC,GACA,MAAAT,MAAAI,MAAAK,IAGAV,aAAAQ,UAAA0C,eAAA,SAAAxC,EAAAyC,GACA,GAAAA,EAAAC,iBAAA,CACA,GAAAC,GAAAF,EAAAR,OAAAQ,EAAAP,KACA5B,YAAAd,OAAAyB,QAAAC,IAAAlB,EAAA2C,KAIArD,aAAAQ,UAAAkC,cAAA,SAAAhC,EAAAiC,EAAAC,GACA3C,KAAAM,QAAAG,IAAAoC,SAAAL,MAAAE,OAAAC,MAAAH,MAAAG,OC3KA,IAAAU,cAAA,GAAAtD,cAEAuD,KACArD,OAAA,EACAsD,SAAA,mBACAC,OAAA,KACAC,OAAA,KACAzB,MAAA,KACAF,MAAA,KACA4B,OAAA,KACAC,UACAC,aACAC,SACAC,UAAA,EACAC,KAAA,WACAT,IAAAU,WACAV,IAAAW,SAIAA,MAAA,WACAC,WAAA,WACAZ,IAAAa,gBACAb,IAAAc,kBACA,MAGAD,cAAA,WACAE,EAAA,eAAAC,GAAA,QAAA,WACA,IAAA,GAAAtD,GAAA,EAAAuD,EAAAjB,IAAAO,MAAA/C,OAAAE,EAAAuD,EAAAvD,IAAA,CACA,GAAAwD,GAAAlB,IAAAO,MAAA7C,EACAwD,GAAAxC,MAAAlB,SACAwC,IAAAmB,QAAAD,EAAAxC,OACAsB,IAAAoB,QAAAF,EAAAxC,QAEAwC,EAAA1C,MAAAhB,SACAwC,IAAAmB,QAAAD,EAAA1C,OACAwB,IAAAoB,QAAAF,EAAA1C,QAGAwB,IAAAqB,aAGAN,EAAA,WAAAC,GAAA,YAAA,SAAA9B,GACA6B,EAAArE,MAAA4E,SAAA,UACAtB,IAAAE,OAAAhB,EAAAqC,QACAvB,IAAAG,OAAAjB,EAAAsC,WAEAR,GAAA,YAAA,SAAA9B,GACA,GAAAc,IAAAE,QAAAF,IAAAG,OAAA,CACA,GAAAsB,GAAAzB,IAAAE,OAAAhB,EAAAqC,QACAG,EAAA1B,IAAAG,OAAAjB,EAAAsC,OACAxB,KAAA2B,MAAAF,EAAAC,GACA1B,IAAAE,OAAA,KACAF,IAAAG,OAAA,QAEAa,GAAA,aAAA,SAAA9B,GACA6B,EAAArE,MAAA4E,SAAA,UACAtB,IAAAE,OAAAhB,EAAA0C,cAAAC,QAAA,GAAAN,QACAvB,IAAAG,OAAAjB,EAAA0C,cAAAC,QAAA,GAAAL,WAEAR,GAAA,YAAA,SAAA9B,GACA,GAAAc,IAAAE,QAAAF,IAAAG,OAAA,CACA,GAAAsB,GAAAzB,IAAAE,OAAAhB,EAAA0C,cAAAC,QAAA,GAAAN,QACAG,EAAA1B,IAAAG,OAAAjB,EAAA0C,cAAAC,QAAA,GAAAL,OACAxB,KAAA2B,MAAAF,EAAAC,GACA1B,IAAAE,OAAA,KACAF,IAAAG,OAAA,QAGAY,EAAAe,UAAAd,GAAA,UAAA,SAAA9B,GAGA,IAAAA,EAAA6C,QACA/B,IAAAgC,eAGA,IAAA9C,EAAA6C,QACA/B,IAAAiC,cAGA,IAAA/C,EAAA6C,QACA/B,IAAAqB,WAGA,IAAAnC,EAAA6C,SACA/B,IAAAkC,iBAKAxB,SAAA,WACAK,EAAAoB,QAAAnC,IAAAC,SAAA,SAAAM,GACA,IAAA,GAAA7C,GAAA,EAAAuD,EAAAV,EAAA/C,OAAAE,GAAAuD,EAAAvD,IACAsC,IAAAoC,WAAA1E,EAAA6C,EAAA7C,EAAA,IACAsC,IAAAqC,UAAA3E,MAKA0E,WAAA,SAAA1E,EAAAwD,GACA,GAAAoB,GAAAvB,EAAA,oBAAArD,EAAA,6BACA6E,EAAAxB,EAAA,kCACAyB,EAAAzB,EAAA,mCAEAG,GAAAqB,MAAArE,OACAqE,EAAAE,OAAA,gDAAAzC,IAAA0C,gBAAA,QAAAxB,EAAAqB,MAAArE,OAAA,2CAEAgD,EAAAqB,MAAA7D,OACA6D,EAAAE,OAAA,kDAAAzC,IAAA0C,gBAAA,QAAAxB,EAAAqB,MAAA7D,OAAA,yDAEAwC,EAAAqB,MAAA/D,OACA+D,EAAAE,OAAA,2DAAAvB,EAAAqB,MAAA/D,MAAA,+BAIA,QAAA0C,EAAAsB,QAAA5E,MACA4E,EAAAG,KAAAzB,EAAAsB,QAAAjE,KAEAgE,EAAAK,SAAAN,GACAE,EAAAI,SAAAN,GACAA,EAAAM,SAAA,SAGAP,UAAA,SAAA3E,GACA,GAAAwD,IACAxC,MAAAqC,EAAA,QAAArD,EAAA,sBACAc,MAAAuC,EAAA,QAAArD,EAAA,sBACA6E,MAAAxB,EAAA,QAAArD,EAAA,gBACA8E,QAAAzB,EAAA,QAAArD,EAAA,kBAEAsC,KAAAO,MAAAnD,KAAA8D,IAGAwB,gBAAA,SAAA9E,EAAAT,GACA,GAAA0F,GAAA7C,IAAAK,OAAAyC,QAAA3F,EACA,OAAA0F,GAAA,GACA7C,IAAAM,UAAAlD,MAAAQ,KAAAA,EAAAT,KAAAA,IACA6C,IAAAK,OAAAjD,KAAAD,GACA6C,IAAAM,UAAA9C,OAAA,GAEAqF,GAGA/B,eAAA,WAEA,GAAAiC,GAAAC,YAAA,WACA,GAAAzD,GAAAQ,aAAAR,UACAA,GAAA,IACAwB,EAAA,iBAAAkC,KAAAC,MAAA3D,EAAA,MAEA4D,cAAAJ,IAEA,IAQAhD,cAAA1C,YAAA2C,IAAAM,UAAA,WAKA,IAAA,GAAA5C,GAAA,EAAAA,EAAAsC,IAAAM,UAAA9C,OAAAE,IAAA,CACA,GAAA0F,GAAApD,IAAAM,UAAA5C,GACAa,EAAAwB,aAAAL,SAAA0D,EAAAjG,KACA,IAAA,SAAAiG,EAAAxF,MAAA,SAAAwF,EAAAxF,KACAmD,EAAA,mBAAArD,EAAA,MAAA2F,KAAA,WACAtC,EAAArE,MAAA4G,IAAA,GAAA/E,IAAAA,EACAwC,EAAArE,MAAA6G,WAAAD,IAAA,GAAA/E,IAAAA,QAGA,CAAA,GAAA,SAAA6E,EAAAxF,KAGA,QAFAmD,GAAA,mBAAArD,EAAA,MAAAa,IAAA6E,EAAAjG,MAKA6C,IAAAQ,UAAA,EACAO,EAAA,eAAAyC,OACAzC,EAAA,YAAA0C,UAIA9B,MAAA,SAAA+B,EAAAC,GACAD,GAAAC,IACAC,KAAAC,IAAAH,GAAAE,KAAAC,IAAAF,GACAD,EAAA,GAEAtF,QAAAC,IAAA,cACA2B,IAAAgC,iBAGA5D,QAAAC,IAAA,eACA2B,IAAAqB,YAGAsC,EAAA,EAEAvF,QAAAC,IAAA,YAGAD,QAAAC,IAAA,gBAKAyF,UAAA,WACA,GAAAC,GAAAhD,EAAA,QAAAiD,KAAA,cAGA,OAFAD,GAAA,EAAAE,SAAAF,GAAA,EACAA,EAAAhD,EAAA,QAAAmC,UAAA,IAAAa,GAAAA,EAAAhD,EAAA,QAAAmC,SACAa,GAGAG,eAAA,WACA,GAAAC,GAAAF,SAAAlD,EAAA,QAAAiD,KAAA,aACA,OAAAG,GAAA,EAAA,KACAnE,IAAAoE,QAAAD,IAGAC,QAAA,SAAAD,GAEA,MAAAnE,KAAAO,MAAA4D,EAAA,IAIA9C,SAAA,WACA,GAAA6B,GAAAnC,EAAA,WAAAmC,QACAZ,EAAAvB,EAAA,gBAAAvD,OACAuG,EAAA/D,IAAA8D,YAAAZ,CACAa,IAAAb,EAAAZ,GACAvB,EAAA,QAAAsD,OAAAC,SACAC,WAAAR,GACA,IAAA,WACA,GAAAI,GAAAJ,EAAAb,CACAnC,GAAA,QAAAiD,MAAAQ,cAAAT,EAAAU,YAAAN,IACAnE,IAAA0E,SAAA1E,IAAAoE,QAAAD,EAAA,IACAnE,IAAA2E,SAAA3E,IAAAoE,QAAAD,OAKAnC,aAAA,WACA,GAAAkB,GAAAnC,EAAA,WAAAmC,QACAa,EAAA/D,IAAA8D,YAAAZ,CACAa,IAAA,GACAhD,EAAA,QAAAsD,OAAAC,SACAC,WAAAR,GACA,IAAA,WACA,GAAAI,GAAAJ,EAAAb,CACAnC,GAAA,QAAAiD,MAAAQ,cAAAT,EAAAU,YAAAN,IACAnE,IAAA0E,SAAA1E,IAAAoE,QAAAD,EAAA,IACAnE,IAAA2E,SAAA3E,IAAAoE,QAAAD,OAKAjC,YAAA,WACA,GAAAhB,GAAAlB,IAAAkE,gBACAhD,GAAAqB,MAAAqC,SAAA,SAGA3C,YAAA,WACA,GAAAf,GAAAlB,IAAAkE,gBACAhD,GAAAsB,QAAA6B,OAAAC,SACAO,UAAA,GACA,IAAA,WACA3D,EAAAqB,MAAAuC,YAAA,WAIAJ,SAAA,SAAAxD,GACA,QAAAA,IACAA,EAAAxC,MAAAlB,QAAAwC,IAAAoB,QAAAF,EAAAxC,YACAwC,EAAA1C,MAAAhB,QAAAwC,IAAAoB,QAAAF,EAAA1C,UAGAmG,SAAA,SAAAzD,GACA,QAAAA,IACAA,EAAAxC,MAAAlB,QAAAwC,IAAAmB,QAAAD,EAAAxC,YACAwC,EAAA1C,MAAAhB,QAAAwC,IAAAmB,QAAAD,EAAA1C,UAGA4C,QAAA,SAAAzD,GACA,QAAAA,OACAA,GAAA2G,SAAAS,OAAA,GAAA,IAAA,WACApH,EAAA2F,IAAA,GAAA0B,QACArH,EAAAsH,YAAA,EACAtH,EAAA2F,IAAA,GAAAyB,OAAA,EACApH,EAAAuH,KAAA,SAAA,MAIA/D,QAAA,SAAAxD,GACA,QAAAA,IACAA,EAAAuH,KAAA,SAAA,GACAvH,EAAAsH,YAAA,MACAtH,GAAA2F,IAAA,GAAA6B,SC5SApE,GAAAe,UAAAsD,MAAA,WACApF,IAAAS","file":"main.min.js","sourcesContent":["/**\n * Copyright (c) POV | American Documentary\n * Asset Manager code is heavily modified from orignal source to expend from just managing image to managing video and audio.\n *\n * html5rocks.com Copyright (c)\n * Except as otherwise [noted](http://code.google.com/policies.html#restrictions), the content of this page is licensed under the [Creative Commons Attribution 3.0 License](http://creativecommons.org/licenses/by/3.0/), and code samples are licensed under the [Apache 2.0 License](http://www.apache.org/licenses/LICENSE-2.0).\n * createCORSRequest is Copyright (c) html5rocks.com (http://www.html5rocks.com/en/tutorials/cors/)\n * Asset Manager is Copyright (c) html5rocks.com (http://www.html5rocks.com/en/tutorials/games/assetmanager/)\n */\n\n/**\n * Using CORS\n * source: http://www.html5rocks.com/en/tutorials/cors/\n */\nfunction createCORSRequest(method, url) {\n  var xhr = new XMLHttpRequest();\n  if (\"withCredentials\" in xhr) {\n    // Check if the XMLHttpRequest object has a \"withCredentials\" property.\n    // \"withCredentials\" only exists on XMLHTTPRequest2 objects.\n    xhr.open(method, url, true);\n  }\n  else if (typeof XDomainRequest != \"undefined\") {\n    // Otherwise, check if XDomainRequest.\n    // XDomainRequest only exists in IE, and is IE's way of making CORS requests.\n    xhr = new XDomainRequest();\n    xhr.open(method, url);\n  }\n  else {\n    // Otherwise, CORS is not supported by the browser.\n    xhr = null;\n  }\n  return xhr;\n}\n\n\n/**\n * Simple Asset Management for HTML5 Games\n * Source: http://www.html5rocks.com/en/tutorials/games/assetmanager/\n * This code is heavily modified from orignal source to expend from just managing image to managing video and audio.\n */\nfunction AssetManager() {\n  this.DEBUG = true;\n  this.successCount = 0;\n  this.errorCount = 0;\n  this.cache = {};\n  this.downloadQueue = [];\n  this.inQueue = {};\n}\n\nAssetManager.prototype.queueDownload = function(path) {\n  this.downloadQueue.push(path);\n}\n\nAssetManager.prototype.constructor = function(queue, downloadCallback) {\n  if(typeof queue!==\"undefined\") this.downloadQueue = queue;\n  if (this.downloadQueue.length === 0 && typeof downloadCallback!==\"undefined\") downloadCallback();\n  var parentThis = this;\n  for (var i = 0; i < this.downloadQueue.length; i++) {\n    var obj = this.downloadQueue[i];\n    // skip if the asset is already downloaded\n    // if(this.getAsset(obj.path)!=\"undefined\") continue;\n\n    if(obj.type=='image'){\n      this.downloadImage(obj.path, function(path, result){\n        parentThis.cache[path] = result;\n        if(parentThis.isDone()) downloadCallback();\n      });\n    }\n    else if(obj.type=='audio'){\n      this.downloadAudio(obj.path, function(path, result){\n        parentThis.cache[path] = result;\n        if(parentThis.isDone()) downloadCallback();\n      });\n    }\n    else if(obj.type=='video'){\n      this.downloadVideo(obj.path, function(path, result){\n        parentThis.cache[path] = result;\n        if(parentThis.isDone()) downloadCallback();\n      });\n    }\n    else continue;\n  }\n}\n\nAssetManager.prototype.downloadImage = function(path, downloadCallback){\n  var image      = new Image();\n  var parentThis = this;\n  if(parentThis.DEBUG) console.log(\"IMAGE DOWNLOADING: \", path);\n  // image.addEventListener(\"progress\", function(e){parentThis.updateProgress(path, e)});\n  image.addEventListener(\"load\", function() {\n    parentThis.successCount += 1;\n    if(parentThis.DEBUG) console.log(\"IMAGE DOWNLOADED: \", path);\n    downloadCallback(path, image);\n  }, false);\n  image.addEventListener(\"error\", function() {\n    parentThis.errorCount += 1;\n  }, false);\n  image.src = path;\n}\n\nAssetManager.prototype.downloadAudio = function(path, downloadCallback){\n  var audio      = new Audio();\n  var parentThis = this;\n  if(parentThis.DEBUG) console.log(\"AUDIO DOWNLOADING: \", path);\n  // audio.addEventListener(\"progress\", function(e){parentThis.updateProgress(path, e)});\n  audio.addEventListener(\"load\", function() {\n    if(parentThis.DEBUG) console.log('AUDIO DOWNLOADED: ', path);\n    parentThis.successCount += 1;\n    downloadCallback(path, audio);\n  }, false);\n  audio.addEventListener(\"error\", function() {\n    parentThis.errorCount += 1;\n  }, false);\n  audio.src = path;\n}\n\nAssetManager.prototype.downloadVideo = function(path, downloadCallback){\n  var video      = null;\n  var parentThis = this;\n  var xhr        = createCORSRequest('GET', path);\n  if (!xhr) throw new Error('CORS not supported');\n  if(parentThis.DEBUG) console.log(\"VIDEO DOWNLOADING: \", path);\n\n\txhr.responseType = 'blob';\n\t// xhr.addEventListener(\"progress\", function(e){parentThis.updateProgress(path, e)});\n\txhr.addEventListener(\"load\", function() {\n    if(parentThis.DEBUG) console.log(\"VIDEO DOWNLOADED: \", path);\n    parentThis.successCount += 1;\n    window.URL = window.URL || window.webkitURL;\n\t\tvideo = window.URL.createObjectURL(this.response);\n    downloadCallback(path, video);\n\t}, false);\n  xhr.addEventListener(\"error\", function() {\n    parentThis.errorCount += 1;\n  }, false);\n  xhr.addEventListener(\"progress\", function (event) {\n    parentThis.progressCount(path, event.loaded, event.total);\n  });\n\txhr.send();\n}\n\nAssetManager.prototype.isDone = function() {\n  return (this.downloadQueue.length == this.successCount + this.errorCount);\n}\n\nAssetManager.prototype.progress = function() {\n  var progress = 0;\n  var total    = 0;\n\n  for (var key in this.inQueue){\n    if(this.inQueue.hasOwnProperty(key)){\n      progress += this.inQueue[key].progress;\n      total    += this.inQueue[key].total;\n    }\n  }\n\n  return (progress / total) * 100;\n}\n\nAssetManager.prototype.getAsset = function(path) {\n  return this.cache[path];\n}\n\nAssetManager.prototype.updateProgress = function(path, oEvent) {\n  if (oEvent.lengthComputable) {\n    var percentComplete = oEvent.loaded / oEvent.total;\n    if(parentThis.DEBUG) console.log(path, percentComplete);\n  } else {\n  }\n}\nAssetManager.prototype.progressCount = function(path, loaded, total){\n  this.inQueue[path] = {progress: event.loaded, total: event.total};\n}","var assetManager = new AssetManager();\n\nvar app = {\n  DEBUG: true,\n  snapFile: 'assets/snap.json',\n  touchX: null,\n  touchY: null,\n  video: null,\n  audio: null,\n  canvas: null,\n  assets: [],\n  allAssets: [],\n  snaps: [],\n  appReady: false,\n  init: function () {\n    app.readFile();\n    app.start();\n    // app.eventListener();\n  },\n\n  start: function () {\n    setTimeout(function(){\n      app.eventListener();\n      app.downloadAssets();\n    }, 1000);\n  },\n\n  eventListener: function () {\n    $('#startStory').on('click', function () {\n      for (var i = 0, l = app.snaps.length; i < l; i++) {\n        var snap = app.snaps[i];\n        if(snap.video.length){\n          app.playObj(snap.video);\n          app.stopObj(snap.video);\n        }\n        if(snap.audio.length){\n          app.playObj(snap.audio);\n          app.stopObj(snap.audio);\n        }\n      }\n      app.nextSnap();\n    });\n\n    $('section').on('mousedown', function(event){\n      if(!$(this).hasClass('snap')) return;\n      app.touchX = event.clientX;\n      app.touchY = event.clientY;\n    })\n    .on('mousemove', function(event){\n      if(!app.touchX || !app.touchY) return;\n      var diffX = app.touchX - event.clientX;\n      var diffY = app.touchY - event.clientY;\n      app.swipe(diffX, diffY);\n      app.touchX = null;\n      app.touchY = null;\n    })\n    .on('touchstart', function(event){\n      if(!$(this).hasClass('snap')) return;\n      app.touchX = event.originalEvent.touches[0].clientX;\n      app.touchY = event.originalEvent.touches[0].clientY;\n    })\n    .on('touchmove', function(event){\n      if(!app.touchX || !app.touchY) return;\n      var diffX = app.touchX - event.originalEvent.touches[0].clientX;\n      var diffY = app.touchY - event.originalEvent.touches[0].clientY;\n      app.swipe(diffX, diffY);\n      app.touchX = null;\n      app.touchY = null;\n    });\n\n    $(document).on('keydown', function(event){\n      // if(!$(this).hasClass('snap')) return;\n      // left key\n      if(event.keyCode==37){\n        app.previousSnap();\n      }\n      // up key\n      else if(event.keyCode==38){\n        app.backToCover();\n      }\n      // right key\n      else if(event.keyCode==39){\n        app.nextSnap();\n      }\n      // down key\n      else if(event.keyCode==40){\n        app.snapContent();\n      }\n    });\n  },\n\n  readFile: function(){\n    $.getJSON(app.snapFile, function(snaps){\n      for (var i = 1, l = snaps.length; i <= l; i++) {\n        app.createSnap(i, snaps[i-1]);\n        app.indexSnap(i);\n      }\n    });\n  },\n\n  createSnap: function (i, snap) {\n    var section = $('<section id=\"snap'+i+'\" class=\"snap\"></section>');\n    var cover = $('<div class=\"snap-cover\"></div>');\n    var content = $('<div class=\"snap-content\"></div>');\n    // add cover content\n    if(snap.cover.image){\n      cover.append('<img class=\"snap-cover-image\" data-asset-id=\"'+app.addAssetManager('image', snap.cover.image)+'\" src=\"\" alt=\"\" width=\"100%\" height=\"\">');\n    }\n    if(snap.cover.video){\n      cover.append('<video class=\"snap-cover-video\" data-asset-id=\"'+app.addAssetManager('video', snap.cover.video)+'\" loop muted><source src=\"\" type=\"video/mp4\"></video>');\n    }\n    if(snap.cover.audio){\n      cover.append('<audio class=\"snap-cover-audio\" loop muted><source src=\"'+snap.cover.audio+'\" type=\"audio/mp3\"></audio>');\n      // app.allAssets.push({'type': 'audio', 'path': snap.cover.audio});\n    }\n    // add html content to snap\n    if(snap.content.type=='html'){\n      content.html(snap.content.src);\n    }\n    cover.appendTo(section);\n    content.appendTo(section);\n    section.appendTo('main');\n  },\n\n  indexSnap: function (i) {\n    var snap = {\n      video: $('#snap'+i+' .snap-cover video'),\n      audio: $('#snap'+i+' .snap-cover audio'),\n      cover: $('#snap'+i+' .snap-cover'),\n      content: $('#snap'+i+' .snap-content')\n    };\n    app.snaps.push(snap);\n  },\n\n  addAssetManager: function (type, path) {\n    var index = app.assets.indexOf(path);\n    if(index<0){\n      app.allAssets.push({'type': type, 'path': path});\n      app.assets.push(path);\n      return app.allAssets.length - 1;\n    }\n    return index;\n  },\n\n  downloadAssets: function (){\n    // update progress bar on screen\n    var progressState = setInterval(function() {\n      var progress = assetManager.progress();\n      if (progress<100) {\n        $('.progress-bar').css({'width': progress+'%'});\n      }else{\n        clearInterval(progressState);\n      }\n    }, 100);\n\n    /**\n     * using the assetManager libery to download all.\n     * After all the assets are downloaded add there source in the DOM to there elements\n     * @param array            app.allAssets give list of assets to download\n     * @param callbackFunction                update downloaded assets source in DOM\n     */\n    assetManager.constructor(app.allAssets, function(){\n      /**\n       * loop through app.allAssets\n       * add all the src back to right dom object by finding data-asset-id=[app.allAssets i]\n       */\n      for (var i = 0; i < app.allAssets.length; i++) {\n        var asset = app.allAssets[i];\n        var src   = assetManager.getAsset(asset.path);\n        if(asset.type=='audio' || asset.type=='video'){\n          $('[data-asset-id=\"'+i+'\"]').each(function(){\n            $(this).get(0).src = src;\n            $(this).children().get(0).src = src;\n          });\n        }\n        else if(asset.type=='image'){\n          $('[data-asset-id=\"'+i+'\"]').src = asset.path;\n        }\n        else continue;\n        //  if(DEBUG) console.info(i, asset.path, 'downloaded');\n      }\n      app.appReady = true;\n      $('#startStory').show();\n      $('#loading').hide();\n    });\n  },\n\n  swipe: function(x, y){\n    if(!x || !y) return;\n    if(Math.abs(x) > Math.abs(y)){\n      if(x < 0){\n        // left swipe\n        console.log('swipe left');\n        app.previousSnap();\n      }else{\n        // right swipe\n        console.log('swipe right');\n        app.nextSnap();\n      }\n    }else{\n      if(y < 0){\n        // up swipe\n        console.log('swipe up');\n      }else{\n        // down swipe\n        console.log('swipe down');\n      }\n    }\n  },\n\n  getScroll: function () {\n    var scroll = $('main').attr('data-scroll');\n    scroll = (scroll) ? parseInt(scroll) : 0;\n    if(scroll % $('main').width() !== 0) scroll = scroll - (scroll % $('main').width());\n    return scroll;\n  },\n\n  getCurrentSnap: function () {\n    var id   = parseInt($('main').attr('data-snap'));\n    if(id<1) return null;\n    return app.getSnap(id);\n  },\n\n  getSnap: function (id) {\n    // change the index and return the snap object\n    return app.snaps[id-1];\n  },\n\n\n  nextSnap: function () {\n    var width = $('section').width();\n    var section = $('section.snap').length;\n    var scroll = app.getScroll() + width;\n    if(scroll<=(width*section)){\n      $('main').stop().animate({\n        scrollLeft: scroll\n      }, 500, function(){\n        var id = scroll/width;\n        $('main').attr({'data-scroll': scroll, 'data-snap': id});\n        app.stopSnap(app.getSnap(id-1));\n        app.playSnap(app.getSnap(id));\n      });\n    }\n  },\n\n  previousSnap: function () {\n    var width = $('section').width();\n    var scroll = app.getScroll() - width;\n    if(scroll>=0){\n      $('main').stop().animate({\n        scrollLeft: scroll\n      }, 500, function(){\n        var id = scroll/width;\n        $('main').attr({'data-scroll': scroll, 'data-snap': id});\n        app.stopSnap(app.getSnap(id+1));\n        app.playSnap(app.getSnap(id));\n      });\n    }\n  },\n\n  snapContent: function () {\n    var snap = app.getCurrentSnap();\n    snap.cover.addClass('over');\n  },\n\n  backToCover: function () {\n    var snap = app.getCurrentSnap();\n    snap.content.stop().animate({\n      scrollTop: 0\n    }, 1000, function(){\n      snap.cover.removeClass('over');\n    });\n  },\n\n  stopSnap: function (snap) {\n    if(!snap) return false;\n    if(snap.video.length) app.stopObj(snap.video);\n    if(snap.audio.length) app.stopObj(snap.audio);\n  },\n\n  playSnap: function (snap) {\n    if(!snap) return false;\n    if(snap.video.length) app.playObj(snap.video);\n    if(snap.audio.length) app.playObj(snap.audio);\n  },\n\n  stopObj: function (obj) {\n    if(!obj) return false;\n    obj.animate({volume: 0}, 500, function(){\n      obj.get(0).pause();\n      obj.currentTime = 0;\n      obj.get(0).volume = 1;\n      obj.prop('muted', true);\n    });\n  },\n\n  playObj: function (obj) {\n    if(!obj) return false;\n    obj.prop('muted', false);\n    obj.currentTime = 0;\n    obj.get(0).play();\n  },\n};","$(document).ready(function(){\n  app.init();\n});"],"sourceRoot":"/source/"}